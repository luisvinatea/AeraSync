name: CI/CD Pipeline for AeraSync

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Flutter environment
      # Pinning version ensures consistency. cache: true enables dependency caching.
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2' # Updated from 3.22.2
          channel: 'stable'
          cache: true # Cache dependencies for faster builds

      # Step 3: Verify Flutter version
      - name: Verify Flutter version
        run: flutter --version

      # Step 4: Clean the project (Good practice)
      - name: Clean project
        run: flutter clean

      # Step 5: Get dependencies (Removed risky fallback logic)
      # Ensure pubspec.yaml is correct before committing. If this fails, the workflow should fail.
      - name: Get dependencies
        run: flutter pub get

      # Step 6: Verify required assets (Good check)
      - name: Verify required assets
        run: |
          MISSING=false
          for asset in \
            web/icons/aerasync64.webp \
            web/icons/aerasync64.png \
            web/icons/aerasync180.webp \
            web/icons/aerasync180.png \
            web/icons/aerasync512.webp \
            web/icons/aerasync512.png \
            web/icons/aerasync1024.webp \
            web/icons/aerasync1024.png \
            web/icons/aerasync.webp \
            web/assets/wave.svg \
            web/manifest.json \
            web/privacy.html \
            assets/data/shrimp_respiration_salinity_temperature_weight.json \
            assets/data/o2_temp_sal_100_sat.json \
            lib/l10n/app_en.arb; do # Added a few more critical files
            if [ ! -f "$asset" ]; then
              echo "Error: Required asset/file '$asset' is missing"
              MISSING=true
            fi
          done
          if [ "$MISSING" = true ]; then exit 1; fi

      # Step 7: Generate localization files (Necessary)
      - name: Generate localization files
        run: flutter gen-l10n

      # Step 8: Run tests (Good practice)
      - name: Run tests
        run: flutter test

      # Step 8: Check ARB File Consistency (Requires Python)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use a recent Python 3 version

      - name: Check ARB Key Consistency
        run: |
            echo "Checking consistency of localization keys..."
            python3 scripts/verify_arb.py
        env:
            PYTHONPATH: .

      # Step 10: Build web release (Correct command and base-href)
      - name: Build web release
        run: flutter build web --dart-define=flutter.web.renderer=canvaskit --release --base-href=/AeraSync/

      # Step 11: Deploy to GitHub Pages (Uses standard action)
      # Now only runs on push events to the main branch
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Condition added
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          # Optional: Add commit message, user name/email if needed
          commit_message: "Deploy build for commit ${{ github.sha }}"
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          # Optional: Keep history or force push (use force push with caution)
          # keep_files: false # Default is false (cleans destination branch)
          # force_orphan: true # Creates a clean history each time

