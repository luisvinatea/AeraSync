name: CI for AeraSync Main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Install OpenBLAS
        run: sudo apt-get update && sudo apt-get install -y libopenblas-dev

      - name: Install build tools
        run: sudo apt-get install -y gfortran liblapack-dev

      - name: Install xsimd
        run: sudo apt-get update && sudo apt-get install -y libxsimd-dev

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
        working-directory: backend

      - name: Verify required backend data files
        run: |
          for f in assets/data/o2_temp_sal_100_sat.json assets/data/shrimp_respiration_salinity_temperature_weight.json; do
            if [ ! -f "$f" ]; then
              echo "Error: Required backend data file '$f' is missing"
              exit 1
            fi
          done

      - name: Copy backend data files into backend folder if needed
        run: |
          mkdir -p backend/assets/data
          cp assets/data/*.json backend/assets/data/

      - name: Run Flake8
        run: |
          flake8 backend/ --max-line-length=79

      - name: Run Pylint
        run: |
          pylint backend/*.py

      - name: Run backend tests
        run: |
          pytest -v backend/test.py

      - name: Start FastAPI backend for frontend tests
        run: |
          uvicorn backend.main:app --host 0.0.0.0 --port 8000 --log-level debug &
          sleep 10
          curl --retry 5 --retry-delay 2 --fail http://localhost:8000/health || { cat backend/app.log; exit 1; }
        working-directory: .

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Verify Flutter version
        run: flutter --version

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: /home/runner/.pub-cache
          key: flutter-pub-${{ runner.os }}-stable-3.29.2-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            flutter-pub-${{ runner.os }}-stable-3.29.2-

      - name: Clean project
        run: flutter clean

      - name: Get dependencies
        run: flutter pub get

      - name: Verify required assets
        run: |
          MISSING=false
          for asset in \
            web/icons/aerasync64.webp \
            web/icons/aerasync64.png \
            web/icons/aerasync180.webp \
            web/icons/aerasync180.png \
            web/icons/aerasync512.webp \
            web/icons/aerasync512.png \
            web/icons/aerasync1024.webp \
            web/icons/aerasync1024.png \
            web/icons/aerasync.webp \
            web/assets/wave.svg \
            web/manifest.json \
            web/privacy.html \
            assets/fonts/Montserrat/static/Montserrat-Regular.ttf \
            assets/data/shrimp_respiration_salinity_temperature_weight.json \
            assets/data/o2_temp_sal_100_sat.json \
            lib/l10n/app_en.arb; do
            if [ ! -f "$asset" ]; then
              echo "Error: Required asset/file '$asset' is missing"
              MISSING=true
            fi
          done
          if [ "$MISSING" = true ]; then exit 1; fi

      - name: Generate localization files
        run: flutter gen-l10n

      - name: Run build_runner
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Run Flutter tests
        run: flutter test

      - name: Check ARB Key Consistency
        run: |
          echo "Checking consistency of localization keys..."
          python3 scripts/verify_arb.py
        env:
          PYTHONPATH: .